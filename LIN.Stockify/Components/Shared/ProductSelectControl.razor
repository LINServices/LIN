@code {


    /// <summary>
    /// Modelo.
    /// </summary>
    [Parameter]
    public ProductModel? Model { get; set; }


    /// <summary>
    /// Evento al hacer click.
    /// </summary>
    [Parameter]
    public Action<ProductModel?>? OnClick { get; set; }



    [Parameter]
    public bool State { get; set; }



    /// <summary>
    /// Enviar el evento.
    /// </summary>
    private void SendEvent()
    {
        OnClick?.Invoke(Model);
    }


    private string GetImage()
    {

        if (Model.Image.Length <= 0)
        {
            return "./img/Products/packages.png";
        }

        return $"data:image/png;base64,{Convert.ToBase64String(Model.Image)}";


    }

    private (string, string, string) GetClass()
    {

        if (Model.DetailModel.Quantity <= 0)
        {
            return ("bg-red-50 border-red-500 dark:border-red-800 dark:bg-red-950/80", "fill-red-500 dark:fill-red-500", "dark:text-red-200");
        }

        else if (Model.DetailModel.Quantity <= 10)
        {
            return ("bg-orange-50 border-orange-500 dark:border-orange-800 dark:bg-orange-950/50", "fill-orange-500 dark:fill-orange-500", "dark:text-orange-200");
        }


        return ("bg-zinc-100 dark:border-zinc-600 dark:bg-zinc-800", "dark:fill-zinc-400", "dark:text-zinc-300");

    }

}

<div @onclick="SendEvent" class="flex items-center justify-between shadow-sm bg-white rounded-lg p-3 dark:bg-zinc-900 mt-2 @(State?"ring-2 ring-current-500":"") ">

    <div class="flex justify-between items-center">
        <div class="h-10 w-10 p-2 rounded-lg  ring-1 ring-zinc-300 bg-ring-100 dark:ring-zinc-600 ">
            <img class="h-full w-full" src="@GetImage()" />
        </div>

        <div class="flex flex-col ml-2">
            <label class="font-bold text-sm text-zinc-700 dark:text-zinc-300">@(Model?.Name ?? "Sin nombre")</label>
            <label class="text-xs -mt-1 text-zinc-600 dark:text-zinc-400">@(Model?.Category.ToString() ?? "Sin categoría")</label>
        </div>
    </div>

    @{
        var classes = GetClass();
    }

    <div>

        <div class="flex items-center justify-center w-20 h-7 rounded-lg @classes.Item1">
            <svg class="w-3 h-3 text-gray-500 dark:text-gray-400 mr-1.5 @classes.Item2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15.528 2.973a.75.75 0 0 1 .472.696v8.662a.75.75 0 0 1-.472.696l-7.25 2.9a.75.75 0 0 1-.557 0l-7.25-2.9A.75.75 0 0 1 0 12.331V3.669a.75.75 0 0 1 .471-.696L7.443.184l.01-.003.268-.108a.75.75 0 0 1 .558 0l.269.108.01.003zM10.404 2 4.25 4.461 1.846 3.5 1 3.839v.4l6.5 2.6v7.922l.5.2.5-.2V6.84l6.5-2.6v-.4l-.846-.339L8 5.961 5.596 5l6.154-2.461z" />

            </svg>
            <label class="text-sm font-bold mt-0.5 @classes.Item3">@Model.DetailModel.Quantity</label>
        </div>

    </div>

</div>