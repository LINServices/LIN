@page "/home"
@inject NavigationManager nav


@* Pantalla *@
<div class="flex w-full justify-center overflow-y-auto overflow-x-hidden UIScroll">
    <div class="flex flex-grow flex-col w-full h-full max-w-lg mx-5">


        <label class="text-4xl font-bold dark:text-zinc-200 mt-8">Tablero</label>

        <div class="flex flex-col lg:flex-row gap-3 w-full mt-8">

            @if (HomeDTO != null)
            {

                <div class="p-4 w-full bg-white shadow rounded-lg dark:bg-zinc-900">
                    <div class="flex justify-between">
                        <div>
                            <h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-1 mt-2">@FormatearNumero((HomeDTO?.Model?.TodaySalesTotal) ?? 0)</h5>
                            <p class="text-base font-normal text-gray-500 dark:text-gray-400">Ventas hoy</p>
                        </div>
                        @{
                            var total = Calcular();
                        }
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold  text-center @(total.StartsWith('-') ? "text-red-500 dark:text-red-500":"text-green-500 dark:text-green-500")">

                            @total%

                            <svg class="w-3 h-3 ms-1 @(total.StartsWith('-') ? "rotate-180":"")" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 14">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13V1m0 0L1 5m4-4 4 4" />
                            </svg>
                        </div>
                    </div>
                </div>

                <div class="p-4 w-full bg-white shadow rounded-lg dark:bg-zinc-900">
                    <div class="flex justify-between">
                        <div>
                            <h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-1 mt-2">@FormatearNumero(HomeDTO?.Model?.LastWeekSalesTotal ?? 0)</h5>
                            <p class="text-base font-normal text-gray-500 dark:text-gray-400">Ventas semana pasada</p>
                        </div>

                    </div>
                </div>
            }

        </div>

        <div class="w-full mt-3 mb-2">

            <Chart @ref="Chart" HomeDto="HomeDTO?.Model" />

        </div>


        <div class="flex flex-col w-full mt-3 mb-2 py-1">

            <label class="font-bold text-xl dark:text-zinc-100">Notificaciones</label>

            @if (Notifications.Response == Responses.IsLoading)
            {
                <LIN.Emma.UI.CircleLoader />
            }
            else if (Notifications.Response == Responses.Success)
            {

                if (Notifications.Models.Count <= 0)
                {
                    <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-gray-300 w-full py-10 mt-3 dark:border-zinc-600">
                        <label class="text-gray-400 dark:text-zinc-400">No tienes ninguna invitación</label>
                    </div>
                }
                else
                {
                    @foreach (var e in Notifications.Models)
                    {
                        <LIN.Components.Shared.InvitationControl Model="e" Models="Notifications.Models" OnRemove="OnRemove" />
                    }
                }
            }
            else
            {
                <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-gray-300 w-full py-10 mt-3 dark:border-zinc-600">
                    <label class="text-gray-400 dark:text-zinc-400">Hubo un error al obtener</label>
                </div>
            }

        </div>




    </div>

</div>

<EmmaDrawer @ref="EmmaIA"></EmmaDrawer>