@page "/members/{Id}"


@* Pantalla *@
<div class="flex h-full w-full flex-grow flex-col overflow-hidden px-4 lg:px-6">

    @* Header. *@
    <Header Tittle="Configuración" GoBack="true" />


    @* Header. *@
    <div class="mt-1">

        @* Cartas. *@
        <div class="mt-3">
            <div class="flex flex-col justify-center py-4">

                <div class="flex w-full flex-col items-center justify-center">

                    <div class="w-full">
                        <label for="small-input" class="mb-2 block text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
                        <input @bind=Name type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]">
                    </div>

                    <div class="mt-3.5 w-full">
                        <label for="small-input" class="mb-2 block text-sm font-medium text-gray-900 dark:text-white">Descripción</label>
                        <input @bind=Description type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]">
                    </div>

                </div>


                <button @onclick="()=>Drawer.Show()" type="button" class="flex w-max gap-2 px-3.5 py-2.5 mt-3 text-xs font-medium text-center text-white bg-current-600 rounded-lg hover:bg-current-700 focus:ring-4 focus:outline-none focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">

                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z" />
                    </svg>

                    Nuevo Integrante
                </button>

            </div>
        </div>


        @* Total de resultados. *@
        <label class="text-sm text-zinc-400">Se encontraron @(Response?.Models.Count ?? 0) resultados</label>

    </div>


    @* Componentes. *@
    <div class="flex-1 UIScroll gap-2 overflow-auto">


        @* Componentes. *@

        @if (Participantes.Count > 0)
        {
            <label>Nuevos integrantes:</label>

            @foreach (var e in Participantes ?? [])
            {

                var member = new LIN.Types.Inventory.Models.IntegrantDataModel
                    {
                        Nombre = e.Account.Name,
                        Rol = InventoryRoles.Undefined,
                        Usuario = e.Account.Identity.Unique
                    };

                <MemberControl Model="member" State="false"></MemberControl>
            }
        }

        @* Cargando *@
        @if (Response == null || IsLoading)
        {
            <div class="flex w-full items-center justify-center">
                <Loader />
            </div>
        }

        @* Render *@
        else
        {
            switch (Response.Response)
            {

                @* Correctamente *@
                case Responses.Success:
                    {

                        @* No hay elementos *@
                        @if (Response.Models.Count <= 0)
                        {
                            <div class="border-2 mt-3 flex w-full items-center justify-center rounded-lg border-dashed border-zinc-300 py-7 dark:border-gray-400">
                                <label class="text-zinc-400 dark:text-gray-200">No tienes ningún producto</label>
                            </div>
                        }

                        @* Renderizar componentes *@
                        else
                        {
                            @foreach (var e in Response.Models ?? [])
                            {

                                <MemberControl Model="e"  State=true  OnClick="OpenMember" ></MemberControl>
                               
                            }
                        }
                        break;
                    }

                @* Otros *@
                default:
                    {
                        <div class="border-2 mt-3 flex w-full items-center justify-center rounded-lg border-dashed border-zinc-300 py-7 dark:border-gray-400">
                            <label class="text-zinc-400 dark:text-gray-200">Error al obtener los productos</label>
                        </div>
                        break;
                    }

            }

        }

    </div>


</div>



<DrawerPeople @ref="Drawer" OnHide="StateHasChanged" Selected="Participantes" />

<MemberPopup @ref="MemberPopup" OnSuccess="()=>InvokeAsync(StateHasChanged)" OnDelete="OnDelete" />