@page "/members/{Id}"
@inject IInventoryManager InventoryManager

<AuthorizedControl />

@* Pantalla *@
<div class="flex h-full w-full flex-grow flex-col overflow-hidden px-4 lg:px-6">

    @* Header. *@
    <Header Tittle="Configuración" GoBack="true" />

    @* Componentes. *@
    <div class="UIScroll mt-4 grid w-full grid-cols-1 items-center justify-center gap-3 overflow-y-auto dl:overflow-y-hidden dl:grid-cols-2">

        @* Información general. *@
        <div class="HiddenScroll UIScroll h-full w-full dl:overflow-y-auto">

            @* Cartas. *@
            <div class="mt-3">
                <div class="flex flex-col justify-center py-4">

                    <div class="flex w-full flex-col items-center justify-center">

                        <div class="w-full">
                            <label for="small-input" class="mb-2 block text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
                            <input @bind=Name type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]">
                        </div>

                        <div class="mt-3.5 w-full">
                            <label for="small-input" class="mb-2 block text-sm font-medium text-gray-900 dark:text-white">Descripción</label>
                            <input @bind=Description type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]">
                        </div>

                    </div>

                    <button @onclick="()=>Drawer.Show()" type="button" class="flex w-max gap-2 px-3.5 py-2.5 mt-3 text-xs font-medium text-center text-white bg-current-600 rounded-lg hover:bg-current-700 focus:ring-4 focus:outline-none focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">

                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z" />
                        </svg>

                        Nuevo Integrante
                    </button>

                </div>
            </div>


            @* Componentes. *@
            @if (Participantes.Count > 0)
            {
                <label>Nuevos integrantes:</label>

                @foreach (var e in Participantes ?? [])
                {

                    var member = new LIN.Types.Inventory.Models.IntegrantDataModel
                    {
                        Name = e.Account.Name,
                        Rol = InventoryRoles.Undefined,
                        User = e.Account.Identity.Unique
                    };

                    <MemberControl Model="member" State="false"></MemberControl>
                }
            }
            @if (Response == null || IsLoading)
            {
                <div class="flex w-full items-center justify-center">
                    <Loader />
                </div>
            }

            @* Render *@
            else
            {
                switch (Response.Response)
                {

                    @* Correctamente *@
                    case Responses.Success:
                        {

                            @* No hay elementos *@
                            @if (Response.Models.Count <= 0)
                            {
                                <div class="mt-3 flex w-full items-center justify-center rounded-lg border-2 border-dashed border-zinc-300 py-7 dark:border-gray-400">
                                    <label class="text-zinc-400 dark:text-gray-200">No tienes ningún producto</label>
                                </div>
                            }

                            @* Renderizar componentes *@
                            else
                            {
                                @foreach (var e in Response.Models ?? [])
                                {

                                    <MemberControl Model="e" State=true OnClick="OpenMember"></MemberControl>

                                }
                            }
                            break;
                        }

                    @* Otros *@
                    default:
                        {
                            <div class="mt-3 flex w-full items-center justify-center rounded-lg border-2 border-dashed border-zinc-300 py-7 dark:border-gray-400">
                                <label class="text-zinc-400 dark:text-gray-200">Error al obtener los productos</label>
                            </div>
                            break;
                        }

                }

            }

        </div>

        @* Configuración. *@
        <div class="UIScroll h-full w-full dl:overflow-y-auto">

            <div class="mb-4 rounded-lg border border-zinc-200 bg-white p-4 shadow-sm dark:border-zinc-700 dark:bg-zinc-800 sm:p-6">
                <div class="flow-root">
                    <h3 class="text-xl font-semibold dark:text-white">Configuración</h3>
                    <p class="text-sm font-normal text-zinc-500 dark:text-zinc-400">Activar o desactivar, la compatibilidad con la tienda Open Store</p>

                    <div class="mt-2 divide-y divide-zinc-200 dark:divide-zinc-700">

                        @if (Mode)
                        {
                            <!-- Item 1 -->
                            <div class="flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Activar Pagos</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Pagos usando la plataforma de Mercado Pago</div>

                                    @if (ResponseToken?.Response == Responses.IsLoading)
                                    {
                                        <div class="mt-3 w-full items-center justify-center">
                                            <Loader />
                                        </div>
                                    }
                                    else if (ResponseToken?.Response == Responses.Unauthorized)
                                    {
                                        <div @onclick="BackCreate" class="mt-3 w-full items-center justify-center">
                                            <label>No tienes autorización</label>
                                        </div>
                                    }
                                    else if (ResponseToken?.Response == Responses.Undefined)
                                    {
                                        <div @onclick="BackCreate" class="mt-3 w-full items-center justify-center">
                                            <label>Ocurrió un error</label>
                                        </div>
                                    }
                                    else if (ResponseToken?.Response == Responses.InvalidParam)
                                    {
                                        <div @onclick="BackCreate" class="mt-3 w-full items-center justify-center">
                                            <label>Parámetros inválidos</label>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="mt-2 flex flex-col gap-2">
                                            <input @bind="tokenMercado" type="text" id="zip-input" aria-describedby="helper-text-explanation" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 ps-10 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]" required placeholder="Token de acceso Mercado Pago">
                                            <input @bind="user" type="text" id="zip-input" aria-describedby="helper-text-explanation" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 ps-10 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]" required placeholder="Usuario">
                                            <input @bind="password" type="password" id="zip-input" aria-describedby="helper-text-explanation" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 ps-10 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-[#323232]" required placeholder="Contraseña">
                                        </div>

                                        <button @onclick="Create" type="button" class="mt-3 flex w-full gap-2 rounded-lg bg-current-600 px-3.5 py-2.5 text-center text-xs font-medium text-white hover:bg-current-700 focus:ring-4 focus:outline-none focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">
                                            Guardar
                                        </button>
                                    }

                                </div>

                            </div>
                        }
                        else
                        {
                            <!-- Item 1 -->
                            <div class="flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Pagos en línea</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Pagos usando la plataforma de Mercado Pago</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden" @bind="SettingsA.IsActive">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                            <!-- Item 2 -->
                            <div class="flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Vender productos sin stock</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Permite vender productos sin stock</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                            <!-- Item 3 -->
                            <div class="flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Reservar productos</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Reservar los productos del stock mientras se genera el pago</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                            <!-- Item 4 -->
                            <div class="flex items-center justify-between pt-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Devolver movimientos</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Cambiar el estado de los movimientos según los estados de los pagos.</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                        }


                    </div>

                </div>
            </div>

            @if (!Mode)
            {
                <div class="rounded-lg border border-zinc-200 bg-white p-4 shadow-sm dark:border-zinc-700 dark:bg-zinc-800 sm:p-6">
                    <div class="flow-root">
                        <h3 class="text-xl font-semibold dark:text-white">Notificaciones</h3>
                        <p class="text-sm font-normal text-zinc-500 dark:text-zinc-400">Recibir al final del dia un resumen de las ventas</p>
                        <div class="divide-y divide-zinc-200 dark:divide-zinc-700">
                            <!-- Item 1 -->
                            <div class="mt-2 flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Resumen diario</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Al final del dia, recibir un resumen de las ventas.</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                            <!-- Item 2 -->
                            <div class="flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Notificaciones de pago</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Recibir correos cuando se apruebe o devuelva un pago.</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                            <!-- Item 3 -->
                            <div class="flex items-center justify-between py-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Item comment notifications</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Send me an email when someone comments on one of my items</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                            <!-- Item 4 -->
                            <div class="flex items-center justify-between pt-4">
                                <div class="flex flex-grow flex-col">
                                    <div class="text-lg font-semibold text-zinc-900 dark:text-white">Buyer review notifications</div>
                                    <div class="text-base font-normal text-zinc-500 dark:text-zinc-400">Send me an email when someone leaves a review with their rating</div>
                                </div>
                                <label class="inline-flex cursor-pointer items-center">
                                    <input type="checkbox" value="" class="peer hidden">
                                    <div class="relative w-11 h-6 bg-zinc-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-current-300 dark:peer-focus:ring-current-800 rounded-full peer dark:bg-zinc-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-zinc-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-zinc-600 peer-checked:bg-current-600 dark:peer-checked:bg-current-600"></div>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

<DrawerPeople @ref="Drawer" OnHide="StateHasChanged" Selected="Participantes" />

<MemberPopup @ref="MemberPopup" OnSuccess="()=>InvokeAsync(StateHasChanged)" OnDelete="OnDelete" />