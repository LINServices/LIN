@page "/inventory"
@inject NavigationManager nav

@code {



    void Go(Types.Inventory.Models.InventoryDataModel? e)
    {
        if (e == null)
            return;

        nav.NavigateTo($"/products/{e.ID}");
    }


    protected override void OnAfterRender(bool firstRender)
    {
          MainLayout.Configure(new()
            {
                OnCenterClick = GoCreate,
                Section = 1,
                DockIcon = 0
            });

        base.OnAfterRender(firstRender);
    }


}


@* Pantalla *@
<div class="flex flex-grow flex-col w-full h-full overflow-hidden px-4 lg:px-6">

<LIN.Components.Layout.Header Tittle="Inventarios" GoBack="false" >

  
    @* Actualizar. *@
    <button @onclick="()=>GetData(true)" type="button" class="h-9 w-9 rounded-full p-2">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="w-full h-full fill-zinc-800 hover:fill-zinc-600 dark:fill-zinc-200" version="1.1" id="Capa_1" viewBox="0 0 492.883 492.883" xml:space="preserve">
        <g>
        <g>
        <path d="M122.941,374.241c-20.1-18.1-34.6-39.8-44.1-63.1c-25.2-61.8-13.4-135.3,35.8-186l45.4,45.4c2.5,2.5,7,0.7,7.6-3    l24.8-162.3c0.4-2.7-1.9-5-4.6-4.6l-162.4,24.8c-3.7,0.6-5.5,5.1-3,7.6l45.5,45.5c-75.1,76.8-87.9,192-38.6,282    c14.8,27.1,35.3,51.9,61.4,72.7c44.4,35.3,99,52.2,153.2,51.1l10.2-66.7C207.441,421.641,159.441,407.241,122.941,374.241z" />
        <path d="M424.941,414.341c75.1-76.8,87.9-192,38.6-282c-14.8-27.1-35.3-51.9-61.4-72.7c-44.4-35.3-99-52.2-153.2-51.1l-10.2,66.7    c46.6-4,94.7,10.4,131.2,43.4c20.1,18.1,34.6,39.8,44.1,63.1c25.2,61.8,13.4,135.3-35.8,186l-45.4-45.4c-2.5-2.5-7-0.7-7.6,3    l-24.8,162.3c-0.4,2.7,1.9,5,4.6,4.6l162.4-24.8c3.7-0.6,5.4-5.1,3-7.6L424.941,414.341z" />
             </g>
        </g>
</svg>
    </button>



</LIN.Components.Layout.Header>



    @* Header. *@
    <div class="mt-4">


        @* Cartas. *@
        <div >
            <div class="flex flex-col justify-center py-4">

                <label class="text-sm mt-0.5 dark:text-gray-300">Total de inventarios</label>

                <label class="font-bold text-4xl dark:text-gray-100 @((Response == null || IsLoading) ?"animate-pulse":"")">@(Response?.Models?.Count.ToString() ?? "●")</label>

                <div class="flex items-center justify-center rounded-lg bg-slate-200 dark:bg-zinc-900 p-1.5 w-40">
                    <img class="h-4 w-4" src="./img/admin.png" />
                    <label class=" font-bold text-zinc-700 text-xs mx-2 mt-0.5 dark:text-gray-300">Vinculados a LIN</label>
                </div>

            </div>
        </div>

        @* Total de resultados. *@
        @if (Response != null)
        {
            <label class="text-zinc-400 text-sm">Se encontraron @Response.Models.Count resultados</label>
        }


    </div>


    @* Componentes. *@
    <div class="flex-1 overflow-auto gap-2">


        @* Cargando *@
        @if (Response == null || IsLoading)
        {
            <div class="w-full flex items-center justify-center">
                <Loader />
            </div>
        }

        @* Render *@
        else
        {
            switch (Response.Response)
            {

                @* Correctamente *@
                case Responses.Success:
                    {

                        @* No hay elementos *@
                        @if (Response.Models.Count <= 0)
                        {
                            <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-zinc-300 w-full py-7 mt-3 dark:border-gray-400">
                                <label class="text-zinc-400 dark:text-gray-200">No tienes ningún inventario</label>
                            </div>
                        }

                        @* Renderizar componentes *@
                        else
                        {
                            @foreach (var e in Response.Models ?? [])
                            {
                                <InventoryControl OnClick="Go" Model="e" />
                            }
                        }
                        break;
                    }

                @* Otros *@
                default:
                    {
                        <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-zinc-300 w-full py-7 mt-3 dark:border-gray-400">
                            <label class="text-zinc-400 dark:text-gray-200">Error al obtener los inventarios</label>
                        </div>
                        break;
                    }

            }

        }

    </div>


    </div>

@code{


    void GoCreate()
    {
        nav.NavigateTo("/new/inventory");
    }

}





