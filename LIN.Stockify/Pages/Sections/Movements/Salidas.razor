@page "/outflows/{Id}"

@inject NavigationManager nav



<div class="flex flex-grow flex-col w-full h-full overflow-hidden px-4 lg:px-6">


    <LIN.Components.Layout.Header Tittle="Salidas" GoBack="true" >

        @* Ajustes. *@
        <button type="button" class="h-9 w-9 rounded-full p-2">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="w-full h-full fill-zinc-800 hover:fill-zinc-600 dark:fill-zinc-200" version="1.1" viewBox="0 0 16 16" xml:space="preserve">
            <path d="M4.58 1a1 1 0 0 0-.868.504l-3.428 6a1 1 0 0 0 0 .992l3.428 6A1 1 0 0 0 4.58 15h6.84a1 1 0 0 0 .868-.504l3.429-6a1 1 0 0 0 0-.992l-3.429-6A1 1 0 0 0 11.42 1zm5.018 9.696a3 3 0 1 1-3-5.196 3 3 0 0 1 3 5.196" />
        </svg>
        </button>

    </LIN.Components.Layout.Header>



    @* Header. *@
    <div class="mt-1">

        @* Cartas. *@
        <div class="mt-3">
            <div class="flex flex-col justify-center py-4">

                <label class="text-sm mt-0.5 dark:text-gray-300">Entradas</label>
                <label class="font-bold text-4xl dark:text-gray-100">@(Response?.Models?.Count ?? 0)</label>

                <div class="flex items-center rounded-lg bg-slate-200 dark:bg-zinc-900 p-1.5 w-40">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-basket3-fill ml-2 w-4 h-4 fill-zinc-500" viewBox="0 0 16 16">
                        <path d="M5.757 1.071a.5.5 0 0 1 .172.686L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-1A.5.5 0 0 1 .5 6h1.717L5.07 1.243a.5.5 0 0 1 .686-.172zM2.468 15.426.943 9h14.114l-1.525 6.426a.75.75 0 0 1-.729.574H3.197a.75.75 0 0 1-.73-.574z" />
                    </svg>
                    <label class=" font-bold text-zinc-700 text-xs mx-2 mt-0.5 dark:text-gray-300">@Contexto?.Inventory.Nombre</label>
                </div>

            </div>
        </div>

        @* Total de resultados. *@
        <label class="text-zinc-400 text-sm">Se encontraron @(Response?.Models?.Count ?? 0) resultados</label>

    </div>


    @* Componentes. *@
    <div class="flex-1 overflow-auto gap-2 UIScroll">


        @* Cargando *@
        @if (Response == null || IsLoading)
        {
            <div class="w-full flex items-center justify-center">
                <Loader />
            </div>
        }

        @* Render *@
        else
        {
            switch (Response.Response)
            {

                @* Correctamente *@
                case Responses.Success:
                    {

                        @* No hay elementos *@
                        @if (Response.Models.Count <= 0)
                        {
                            <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-zinc-300 w-full py-7 mt-3 dark:border-gray-400">
                                <label class="text-zinc-400 dark:text-gray-200">No tienes ningún movimiento</label>
                            </div>
                        }

                        @* Renderizar componentes *@
                        else
                        {
                            @foreach (var e in Response.Models ?? [])
                            {

                                 <OutflowControl Model="e" OnClick="Go" />
                            }
                        }
                        break;
                    }

                @* Otros *@
                default:
                    {
                        <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-zinc-300 w-full py-7 mt-3 dark:border-gray-400">
                            <label class="text-zinc-400 dark:text-gray-200">Error al obtener los movimientos</label>
                        </div>
                        break;
                    }

            }

        }

    </div>

</div>