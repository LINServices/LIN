@page "/new/inventory"
@inject NavigationManager nav

<div class="flex flex-grow flex-col w-full h-full overflow-hidden px-4 lg:px-6 items-center">


    <LIN.Components.Layout.Header Tittle="Nuevo Inventario" GoBack="true" />

    <div class="flex flex-grow flex-col h-full w-full max-w-lg overflow-hidden px-1">


        @if (section == 0)
        {

            @* Header. *@
            <div>

                @* Cartas. *@
                <div class="mt-3">
                    <div class="flex flex-col justify-center py-4">

                        <div class="flex items-center justify-center flex-col w-full">

                            <div class="w-full">
                                <label for="small-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
                                <input @bind="Name" type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 sm:text-xs dark:bg-zinc-900 focus:dark:bg-[#323232] dark:border-zinc-700 dark:text-gray-100">
                            </div>

                            <div class="w-full mt-3.5">
                                <label for="small-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Descripción</label>
                                <input @bind="Direction" type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 sm:text-xs dark:bg-zinc-900 focus:dark:bg-[#323232] dark:border-zinc-700 dark:text-gray-100">
                            </div>

                        </div>

                    </div>
                </div>


                <div class="mt-2">

                    <button @onclick="()=>Drawer.Show()" type="button" class="flex gap-2 px-3.5 py-2.5 text-xs font-medium text-center text-white bg-current-600 rounded-lg hover:bg-current-700 focus:ring-4 focus:outline-none focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">

                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z" />
                        </svg>

                        Nuevo Integrante
                    </button>

                </div>

            </div>


            @* Componentes. *@
            <div class="flex-1 overflow-auto gap-3 mt-2 UIScroll">

                @if (Participantes.Count <= 0)
                {
                    <div class="flex rounded-lg justify-center items-center border-dashed border-2 border-zinc-300 w-full py-7 mt-3 dark:border-gray-400">
                        <label class="text-zinc-400 dark:text-gray-200">No tienes ningún miembro adicional</label>
                    </div>
                }
                else
                {
                    @foreach (var e in Participantes ?? [])
                    {
                        <ProfileControl Model="e" State="false"></ProfileControl>
                    }
                }

            </div>


            @* Botón. *@
            <div class="flex w-full self-end mt-2 items-end justify-center mb-2">
                <button @onclick="Create" type="button" class="px-3 py-2 w-full text-sm font-medium text-center text-white bg-current-600 rounded-lg hover:bg-current-700 focus:ring-4 focus:outline-none focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">
                    Crear Inventario
                </button>
            </div>

        }

        else if (section == 1)
        {
            <div class="flex h-full items-center justify-center">
                <Success></Success>
            </div>
        }

        else if (section == 2)
        {
            <div class="flex items-center justify-center">
                <label>Error</label>
            </div>
        }

        else if (section == 3)
        {
            <div class="flex items-center justify-center">
                <Loader></Loader>
            </div>
        }

    </div>


</div>








<DrawerPeople @ref="Drawer" OnHide="StateHasChanged" Selected="Participantes" />
